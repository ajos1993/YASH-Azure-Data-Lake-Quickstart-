{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
		"DataCleaningInputStream": {
			"type": "string",
			"metadata": {
				"description": "Name of the Event Hub"
			}
		},
		"DataCleaningOutputStream":{
			"type": "string",
			"metadata": {
				"description": "Name of the second Event Hub"
			}
		},
		"eventHubNamespaceName": {
			"type": "string",
			"metadata": {
				"description": "Name of the EventHub namespace"
			}
		},
		"storageAccountName": {
			"type": "string",
			"metadata": {
				"description": "Your existing storage account name where you want the blobs be archived"
			}
		},
		"DataCleaningStreamAnalyticsJob":{
			"type": "string",
			"metadata": {
				"description": "Name of the First stream Analytics Job"
				},
			"defaultValue":"cleanOrdersStreamAnalyticsJob"
			},
		"DataAggregatorStreamAnalyticsJob1":{
			"type": "string",
			"metadata": {
				"description": "Name of the Second stream Analytics Job"
				},
			"defaultValue":"sellingProductPerMinJob"
			},
		"DataAggregatorStreamAnalyticsJob2":{
			"type": "string",
			"metadata": {
				"description": "Name of the Third stream Analytics Job"
				},
			"defaultValue":"geoLocationsJob"
			},
		"DataAggregatorStreamAnalyticsJob3":{
			"type": "string",
			"metadata": {
				"description": "Name of the Fourth stream Analytics Job"
				},
			"defaultValue":"ageGroupWiseRevenueJob"
			},
		"sharedAccessPolicyKey":{
			"type": "string",
			"metadata": {
				"description": "sharedAccessPolicyKey of event namespace"
				}
			}
		},
	"variables": {
		"numberOfStreamingUnits":3,
		"DataAggregatorOutputContainerName": "publish"
	},
  "resources": [
    {
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "apiVersion": "2016-03-01",
      "name": "[parameters('DataCleaningStreamAnalyticsJob')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "standard"
        },
        "outputErrorPolicy": "stop",
        "eventsOutOfOrderPolicy": "adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [{
			"name":"EventHub",  
            "properties":{    
               "type":"stream",  
               "serialization":{    
                  "type":"JSON",  
                  "properties":{    
                     "encoding":"UTF8"  
                  }  
               },  
               "datasource":{    
                  "type":"Microsoft.ServiceBus/EventHub",  
                  "properties":{    
                     "serviceBusNamespace":"[parameters('eventHubNamespaceName')]",  
                     "sharedAccessPolicyName":"RootManageSharedAccessKey",  
                     "sharedAccessPolicyKey": "[parameters('sharedAccessPolicyKey')]",  
                     "eventHubName":"[parameters('DataCleaningInputStream')]"  
                  }  
            
		}}}],
        "transformation": {
          "name": "Transformation",
          "properties": {
            "streamingUnits": "[variables('numberOfStreamingUnits')]",
            "query": "SELECT\r\n *\r\nINTO EventhubOutput \r\nFROM EventHub \r\nWHERE orderDate IS NOT NULL"
          }
        },
		"outputs": [  
			{
			  "name": "EventhubOutput",
			  "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
			  "apiVersion": "2016-03-01",
			  "properties": {
				"datasource": {
				  "type": "Microsoft.ServiceBus/EventHub",
				  "properties": {
					"eventHubName": "[parameters('DataCleaningOutputStream')]",
					"serviceBusNamespace": "[parameters('eventHubNamespaceName')]",
					"sharedAccessPolicyName": "RootManageSharedAccessKey",
					"sharedAccessPolicyKey": "[parameters('sharedAccessPolicyKey')]"
				  }
				},
				"serialization": {
				  "type": "Json",
				  "properties": {
					"encoding": "UTF8",
					"format": "LineSeparated"
				  }
				}
			  }
			}
        ]
      }
    },
	{
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "apiVersion": "2016-03-01",
      "name": "[parameters('DataAggregatorStreamAnalyticsJob1')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "standard"
        },
        "outputErrorPolicy": "stop",
        "eventsOutOfOrderPolicy": "adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [{
			"name":"EventHub",  
            "properties":{    
               "type":"stream",  
               "serialization":{    
                  "type":"JSON",  
                  "properties":{    
                     "encoding":"UTF8"  
                  }  
               },  
               "datasource":{    
                  "type":"Microsoft.ServiceBus/EventHub",  
                  "properties":{    
                     "serviceBusNamespace":"[parameters('eventHubNamespaceName')]",  
                     "sharedAccessPolicyName":"RootManageSharedAccessKey",  
                     "sharedAccessPolicyKey": "[parameters('sharedAccessPolicyKey')]",  
                     "eventHubName":"[parameters('DataCleaningOutputStream')]" 
                  }  
            
		}}}],
        "transformation": {
          "name": "Transformation",
          "properties": {
            "streamingUnits": "[variables('numberOfStreamingUnits')]",
            "query": "SELECT \n System.Timestamp AS allEvents, \n COUNT(sku) AS allsku \n INTO \n Blob \n FROM \n EventHub \n GROUP BY \n TumblingWindow(second,10) \n \n SELECT \n System.Timestamp AS allEvents, \n COUNT(sku) AS allsku \n INTO \n PBI \n FROM \n EventHub \n GROUP BY \n TumblingWindow(second,10)"
          }
        },
		"outputs": [  
			{
            "name": "PBI",
            "properties": {
              "dataSource": {
                "type": "PowerBI",
                "outputPowerBISource": {
                  "dataSet": "Quickstart-sellingProductPerMin-Dataset",
                  "table": "sellingProductPerMin-Table",
                  "groupId": "",
                  "groupName": "My Workspace",
                  "refreshToken": "dummytoken",
                  "tokenUserDisplayName": "anurag.doe@git.com",
                  "tokenUserPrincipalName": "anurag.doe@git.com"
                },
                "properties": {
                  "dataSet": "Quickstart-sellingProductPerMin-Dataset",
                  "table": "sellingProductPerMin-Table",
                  "groupId": "",
                  "groupName": "My Workspace",
                  "refreshToken": "dummytoken",
                  "tokenUserDisplayName": "anurag.doe@git.com",
                  "tokenUserPrincipalName": "anurag.doe@git.com"
                }
              },
              "serialization": null,
              "diagnostics": null
            }
          },
		  {
            "name": "Blob",
            "properties": {
              "datasource": {
					"type": "Microsoft.Storage/Blob",
					"properties": {
						"storageAccounts": [
							{
								"accountName": "[parameters('StorageAccountName')]",
								"accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
							}
						],
						"container": "[variables('DataAggregatorOutputContainerName')]",
						"pathPattern": "publishOrderStream/sellingProductPerMinJob"
					}
				},
              "serialization": {    
                  "type":"JSON",  
                  "properties":{    
                     "encoding":"UTF8",
					 "format": "lineSeparated"  
                  }  
               }
            }
          }
        ]
      }
    },
	{
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "apiVersion": "2016-03-01",
      "name": "[parameters('DataAggregatorStreamAnalyticsJob2')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "standard"
        },
        "outputErrorPolicy": "stop",
        "eventsOutOfOrderPolicy": "adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [{
			"name":"EventHub",  
            "properties":{    
               "type":"stream",  
               "serialization":{    
                  "type":"JSON",  
                  "properties":{    
                     "encoding":"UTF8"  
                  }  
               },  
               "datasource":{    
                  "type":"Microsoft.ServiceBus/EventHub",  
                  "properties":{    
                     "serviceBusNamespace":"[parameters('eventHubNamespaceName')]",  
                     "sharedAccessPolicyName":"RootManageSharedAccessKey",  
                     "sharedAccessPolicyKey": "[parameters('sharedAccessPolicyKey')]",  
                     "eventHubName":"[parameters('DataCleaningOutputStream')]"
                  }  
            
		}}}],
        "transformation": {
          "name": "Transformation",
          "properties": {
            "streamingUnits": "[variables('numberOfStreamingUnits')]",
            "query": "SELECT \n System.Timestamp AS allEvents, COUNT(customerID) as Customer, \n LatLong AS allsku \n INTO \n Blob \n FROM \n EventHub \n GROUP BY \n LatLong, \n TumblingWindow(second, 10) \n \n SELECT \n System.Timestamp AS allEvents, COUNT(customerID) as Customer, \n LatLong AS allsku \n INTO \n PBI \n FROM \n EventHub \n GROUP BY \n LatLong, \n TumblingWindow(second, 10)"
          }
        },
		"outputs": [  
			{
            "name": "PBI",
            "properties": {
              "dataSource": {
                "type": "PowerBI",
                "outputPowerBISource": {
                  "dataSet": "Quickstart-geoLocations-dataset",
                  "table": "geoLocations-table",
                  "groupId": "",
                  "groupName": "My Workspace",
                  "refreshToken": "dummytoken",
                  "tokenUserDisplayName": "anurag.doe@git.com",
                  "tokenUserPrincipalName": "anurag.doe@git.com"
                },
                "properties": {
                  "dataSet": "Quickstart-geoLocations-dataset",
                  "table": "geoLocations-table",
                  "groupId": "",
                  "groupName": "My Workspace",
                  "refreshToken": "dummytoken",
                  "tokenUserDisplayName": "anurag.doe@git.com",
                  "tokenUserPrincipalName": "anurag.doe@git.com"
                }
              },
              "serialization": null,
              "diagnostics": null
            }
          },
		  {
            "name": "Blob",
            "properties": {
              "datasource": {
					"type": "Microsoft.Storage/Blob",
					"properties": {
						"storageAccounts": [
							{
								"accountName": "[parameters('StorageAccountName')]",
								"accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
							}
						],
						"container": "[variables('DataAggregatorOutputContainerName')]",
						"pathPattern": "publishOrderStream/geoLocationsJob"
					}
				},
              "serialization": {    
                  "type":"JSON",  
                  "properties":{    
                     "encoding":"UTF8",
					 "format": "lineSeparated"  
                  }  
               }
            }
          }
        ]
      }
    },
	{
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "apiVersion": "2016-03-01",
      "name": "[parameters('DataAggregatorStreamAnalyticsJob3')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "standard"
        },
        "outputErrorPolicy": "stop",
        "eventsOutOfOrderPolicy": "adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [{
			"name":"CustomerReferenceDataSet",  
            "properties":{    
               "type":"Reference",  
               "serialization":{    
                  "type":"JSON",  
                  "properties":{    
                     "encoding":"UTF8"  
                  }  
               },  
               "datasource":{    
                  "type":"Microsoft.Storage/Blob",  
                  "properties":{
				  	"storageAccounts": [
						  {
							"accountName": "[parameters('StorageAccountName')]",
							"accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
						  }
						],
						"container": "raw",
						"pathPattern": "customer_updated_refrence.json"
					  } 
            
		}}},{
			"name":"EventHub",  
            "properties":{    
               "type":"stream",  
               "serialization":{    
                  "type":"JSON",  
                  "properties":{    
                     "encoding":"UTF8"  
                  }  
               },  
               "datasource":{    
                  "type":"Microsoft.ServiceBus/EventHub",  
                  "properties":{    
                     "serviceBusNamespace":"[parameters('eventHubNamespaceName')]",  
                     "sharedAccessPolicyName":"RootManageSharedAccessKey",  
                     "sharedAccessPolicyKey": "[parameters('sharedAccessPolicyKey')]",  
                     "eventHubName":"[parameters('DataCleaningOutputStream')]"
                  }  
            
		}}}],
        "transformation": {
          "name": "Transformation",
          "properties": {
            "streamingUnits": "[variables('numberOfStreamingUnits')]",
            "query": "SELECT System.Timestamp AS allEvents, \n CASE \n WHEN CS2.age >= 18 AND CS2.age < 30 THEN '18-29' \n WHEN CS2.age >= 30 AND CS2.age < 50 THEN '30-49' \n WHEN CS2.age >= 50 AND CS2.age < 65 THEN '50-64' \n WHEN CS2.age >= 65 AND CS2.age < 80 THEN '65-older' \n ELSE CONCAT( ' ', 'N A') \n END AS age_grp_category, \n COUNT(CS1.sku) AS count_customers \n INTO \n Blob \n FROM \n EventHub CS1 \n JOIN \n CustomerReferenceDataSet CS2 \n ON \n CS1.customerID = CS2.customerID \n GROUP BY \n TumblingWindow(second,10),CS2.age \n \n SELECT \n System.Timestamp AS allEvents, \n CASE \n WHEN CS2.age >= 18 AND CS2.age < 30 THEN '18-29' \n WHEN CS2.age >= 30 AND CS2.age < 50 THEN '30-49' \n WHEN CS2.age >= 50 AND CS2.age < 65 THEN '50-64' \n WHEN CS2.age >= 65 AND CS2.age < 80 THEN '65-older' \n ELSE CONCAT( ' ', 'N A') \n END AS age_grp_category, \n COUNT(CS1.sku) AS count_customers \n INTO \n PBI \n FROM \n EventHub CS1 \n JOIN \n CustomerReferenceDataSet CS2 \n ON \n CS1.customerID = CS2.customerID \n GROUP BY \n TumblingWindow(second,10),CS2.age"
          }
        },
		"outputs": [  
			{
            "name": "PBI",
            "properties": {
              "dataSource": {
                "type": "PowerBI",
                "outputPowerBISource": {
                  "dataSet": "Quickstart-ageGroupWiseRevenue-dataset",
                  "table": "ageGroupWiseRevenue-table",
                  "groupId": "",
                  "groupName": "My Workspace",
                  "refreshToken": "dummytoken",
                  "tokenUserDisplayName": "anurag.doe@git.com",
                  "tokenUserPrincipalName": "anurag.doe@git.com"
                },
                "properties": {
                  "dataSet": "Quickstart-ageGroupWiseRevenue-dataset",
                  "table": "ageGroupWiseRevenue-table",
                  "groupId": "",
                  "groupName": "My Workspace",
                  "refreshToken": "dummytoken",
                  "tokenUserDisplayName": "anurag.doe@git.com",
                  "tokenUserPrincipalName": "anurag.doe@git.com"
                }
              },
              "serialization": null,
              "diagnostics": null
            }
          },
		  {
            "name": "Blob",
            "properties": {
              "datasource": {
					"type": "Microsoft.Storage/Blob",
					"properties": {
						"storageAccounts": [
							{
								"accountName": "[parameters('StorageAccountName')]",
								"accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
							}
						],
						"container": "[variables('DataAggregatorOutputContainerName')]",
						"pathPattern": "publishOrderStream/ageGroupWiseRevenueJob"
					}
				},
              "serialization": {    
                  "type":"JSON",  
                  "properties":{    
                     "encoding":"UTF8",
					 "format": "lineSeparated"  
                  }  
               }
            }
          }
        ]
      }
    }
	
  ]
}
